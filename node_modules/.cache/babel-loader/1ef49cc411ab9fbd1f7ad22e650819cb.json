{"ast":null,"code":"import _objectSpread from \"/Users/newt/dev/todo-list/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/newt/dev/todo-list/src/App.js\";\nimport React from 'react';\nimport TodoItem from './components/TodoItem';\nimport ProgressBar from './components/ProgressBar';\nimport checkAll from \"./images/list.svg\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.createID = () => {\n      return Math.random().toString(36).substring(2) + new Date().getTime().toString(36);\n    };\n\n    this.onItemClicked = id => {\n      const todoItems = this.state.todoItems;\n      const result = todoItems.map(item => id === item.id ? _objectSpread({}, item, {\n        isCompleted: !item.isCompleted\n      }) : _objectSpread({}, item));\n      console.log(result);\n      this.setState({\n        todoItems: result\n      });\n      setTimeout(this.percentNumber, 1);\n    };\n\n    this.isChecked = () => {\n      this.isCheck = !this.isCheck;\n    };\n\n    this.onCheckAllClicked = () => {\n      this.isChecked();\n      const todoItems = this.state.todoItems;\n      todoItems.map(item => {\n        item.isCompleted = this.isCheck;\n      });\n      this.setState({\n        todoItems: todoItems\n      });\n    };\n\n    this.addNewItem = e => {\n      let text = e.target.value;\n\n      if (!text) {\n        return;\n      }\n\n      text = text.trim();\n\n      if (!text) {\n        return;\n      }\n\n      this.setState({\n        todoItems: [{\n          id: this.createID(),\n          title: text,\n          isCompleted: false\n        }, ...this.state.todoItems],\n        newItem: ''\n      });\n    };\n\n    this.onKeyDown = e => {\n      if (e.keyCode === 13) {\n        this.addNewItem(e);\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        newItem: e.target.value\n      });\n    };\n\n    this.delItem = id => {\n      const result = this.state.todoItems.filter(item => {\n        if (id !== item.id) {\n          return item;\n        }\n      });\n      this.setState({\n        todoItems: result\n      });\n    };\n\n    this.percentNumber = () => {\n      let temp = 0;\n      const todoItems = this.state.todoItems;\n      todoItems.map(item => {\n        if (item.isCompleted) {\n          temp++;\n        }\n\n        console.log(temp);\n        return temp;\n      });\n\n      if (temp > 0) {\n        this.setState({\n          progressBar: (temp / todoItems.length * 100).toPrecision(3)\n        });\n      }\n    };\n\n    this.state = {\n      todoItems: [{\n        id: 1,\n        title: 'Get to work',\n        isCompleted: false\n      }, {\n        id: 2,\n        title: 'Go home',\n        isCompleted: false\n      }, {\n        id: 3,\n        title: 'Self study at home',\n        isCompleted: false\n      }],\n      newItem: '',\n      progressBar: 0\n    };\n    this.isCheck = false;\n  }\n\n  render() {\n    const _this$state = this.state,\n          todoItems = _this$state.todoItems,\n          newItem = _this$state.newItem;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"todos\"), React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: checkAll,\n      alt: \"\",\n      onClick: this.onCheckAllClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: newItem,\n      onChange: this.onChange,\n      placeholder: \"What needs to be done?\",\n      onKeyDown: this.onKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(ProgressBar, {\n      progressBar: this.state.progressBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), todoItems.map((item, index) => React.createElement(TodoItem, {\n      key: index,\n      item: item,\n      onItemClicked: this.onItemClicked,\n      delItem: this.delItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/newt/dev/todo-list/src/App.js"],"names":["React","TodoItem","ProgressBar","App","Component","constructor","createID","Math","random","toString","substring","Date","getTime","onItemClicked","id","todoItems","state","result","map","item","isCompleted","console","log","setState","setTimeout","percentNumber","isChecked","isCheck","onCheckAllClicked","addNewItem","e","text","target","value","trim","title","newItem","onKeyDown","keyCode","onChange","delItem","filter","temp","progressBar","length","toPrecision","render","checkAll","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoItem from './components/TodoItem';\nimport ProgressBar from './components/ProgressBar';\nimport checkAll from './images/list.svg';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todoItems: [\n        { id: 1, title: 'Get to work', isCompleted: false },\n        { id: 2, title: 'Go home', isCompleted: false },\n        { id: 3, title: 'Self study at home', isCompleted: false }\n      ],\n      newItem: '',\n      progressBar: 0\n    };\n    this.isCheck = false;\n  }\n\n  createID = () => {\n    return (\n      Math.random()\n        .toString(36)\n        .substring(2) + new Date().getTime().toString(36)\n    );\n  };\n\n  onItemClicked = id => {\n    const { todoItems } = this.state;\n    const result = todoItems.map(item =>\n      id === item.id ? { ...item, isCompleted: !item.isCompleted } : { ...item }\n    );\n    console.log(result);\n    this.setState({\n      todoItems: result\n    });\n    setTimeout(this.percentNumber, 1);\n  };\n\n  isChecked = () => {\n    this.isCheck = !this.isCheck;\n  };\n\n  onCheckAllClicked = () => {\n    this.isChecked();\n    const { todoItems } = this.state;\n    todoItems.map(item => {\n      item.isCompleted = this.isCheck;\n    });\n    this.setState({\n      todoItems: todoItems\n    });\n  };\n\n  addNewItem = e => {\n    let text = e.target.value;\n    if (!text) {\n      return;\n    }\n    text = text.trim();\n    if (!text) {\n      return;\n    }\n    this.setState({\n      todoItems: [\n        { id: this.createID(), title: text, isCompleted: false },\n        ...this.state.todoItems\n      ],\n      newItem: ''\n    });\n  };\n\n  onKeyDown = e => {\n    if (e.keyCode === 13) {\n      this.addNewItem(e);\n    }\n  };\n\n  onChange = e => {\n    this.setState({\n      newItem: e.target.value\n    });\n  };\n\n  delItem = id => {\n    const result = this.state.todoItems.filter(item => {\n      if (id !== item.id) {\n        return item;\n      }\n    });\n    this.setState({\n      todoItems: result\n    });\n  };\n\n  percentNumber = () => {\n    let temp = 0;\n    const { todoItems } = this.state;\n    todoItems.map(item => {\n      if (item.isCompleted) {\n        temp++;\n      }\n      console.log(temp);\n      return temp;\n    });\n    if (temp > 0) {\n      this.setState({\n        progressBar: ((temp / todoItems.length) * 100).toPrecision(3)\n      });\n    }\n  };\n\n  render() {\n    const { todoItems, newItem } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>todos</h1>\n        <div className=\"wrapper\">\n          <div className=\"Header\">\n            <img src={checkAll} alt=\"\" onClick={this.onCheckAllClicked} />\n            <input\n              type=\"text\"\n              value={newItem}\n              onChange={this.onChange}\n              placeholder=\"What needs to be done?\"\n              onKeyDown={this.onKeyDown}\n            />\n          </div>\n          <ProgressBar progressBar={this.state.progressBar} />\n          {todoItems.map((item, index) => (\n            <TodoItem\n              key={index}\n              item={item}\n              onItemClicked={this.onItemClicked}\n              delItem={this.delItem}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}